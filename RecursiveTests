//Tests for count8

@Test public void test81() {
  assertEquals(1, RecursionImplementations.count8(8));
}

@Test public void test82() {
  assertEquals(2, RecursionImplementations.count8(88));
}

@Test public void test83() {
  assertEquals(4, RecursionImplementations.count8(888));
}

@Test public void test84() {
  assertEquals(2, RecursionImplementations.count8(818));
}

@Test public void test85() {
  assertEquals(3, RecursionImplementations.count8(8818));
}
@Test public void test86() {
  assertEquals(0, RecursionImplementations.count8(1234567));
}

@Test public void test87() {
  assertEquals(3, RecursionImplementations.count8(12884));
}

@Test public void test88() {
  assertEquals(7, RecursionImplementations.count8(88888));
}

@Test public void test89() {
  assertEquals(2, RecursionImplementations.count8(4883));
}

@Test public void test810() {
  assertEquals(0, RecursionImplementations.count8(0));
}

//Tests for countHi
  
@Test public void testhi1() {
  assertEquals(1, RecursionImplementations.countHi("hi"));
}

@Test public void testhi2() {
  assertEquals(2, RecursionImplementations.countHi("hihi"));
}

@Test public void testhi3() {
  assertEquals(3, RecursionImplementations.countHi("hihihi"));
}

@Test public void testhi4() {
  assertEquals(1, RecursionImplementations.countHi("okhimy"));
}

@Test public void testhi5() {
  assertEquals(1, RecursionImplementations.countHi("hhhhiiii"));
}

@Test public void testhi6() {
  assertEquals(1, RecursionImplementations.countHi("hi123"));
}

@Test public void testhi7() {
  assertEquals(1, RecursionImplementations.countHi("hiimdan"));
}

@Test public void testhi8() {
  assertEquals(0, RecursionImplementations.countHi("hoi"));
}

@Test public void testhi9() {
  assertEquals(0, RecursionImplementations.countHi("1"));
}

@Test public void testhi10() {
  assertEquals(0, RecursionImplementations.countHi("hello"));
}

//Tests for countHi2

@Test public void testhi21() {
  assertEquals(1, RecursionImplementations.countHi2("hi"));
}

@Test public void testhi22() {
  assertEquals(0, RecursionImplementations.countHi2("xhi"));
}

@Test public void testhi23() {
  assertEquals(1, RecursionImplementations.countHi2("hix"));
}

@Test public void testhi24() {
  assertEquals(2, RecursionImplementations.countHi2("hixhihi"));
}

@Test public void testhi25() {
  assertEquals(1, RecursionImplementations.countHi2("xhi123hi"));
}

@Test public void testhi26() {
  assertEquals(2, RecursionImplementations.countHi2("hihixhi"));
}

@Test public void testhi27() {
  assertEquals(1, RecursionImplementations.countHi2("ahixhi"));
}

@Test public void testhi28() {
  assertEquals(2, RecursionImplementations.countHi2("ahibhi"));
}
@Test public void testhi29() {
  assertEquals(0, RecursionImplementations.countHi2("xhixhi"));
}

@Test public void testhi210() {
  assertEquals(3, RecursionImplementations.countHi2("xhihihixhihxihxihi"));
}

//Tests for count

@Test public void testcount1() {
  assertEquals(1, RecursionImplementations.count("catdogcow", "cat"));
}

@Test public void testcount2() {
  assertEquals(3, RecursionImplementations.count("dogcatdogdog", "dog"));
}

@Test public void testcount3() {
  assertEquals(1, RecursionImplementations.count("abcdefghijk", "abc"));
}

@Test public void testcount4() {
  assertEquals(1, RecursionImplementations.count("123456789", "123"));
}

@Test public void testcount5() {
  assertEquals(1, RecursionImplementations.count("doremi", "re"));
}

@Test public void testcount6() {
  assertEquals(0, RecursionImplementations.count("he", "help"));
}

@Test public void testcount7() {
  assertEquals(1, RecursionImplementations.count("cowcowwolf", "dog"));
}

@Test public void testcount8() {
  assertEquals(3, RecursionImplementations.count("cowcocowcow", "cow"));
}

@Test public void testcount9() {
  assertEquals(6, RecursionImplementations.count("abcaedajkaahgac", "a"));
}

@Test public void testcount10() {
  assertEquals(2, RecursionImplementations.count("okaythisokaythat", "okay"));
}
